// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type EmbeddingLookupSparseOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsEmbeddingLookupSparseOptions(buf []byte, offset flatbuffers.UOffsetT) *EmbeddingLookupSparseOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &EmbeddingLookupSparseOptions{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *EmbeddingLookupSparseOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *EmbeddingLookupSparseOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *EmbeddingLookupSparseOptions) Combiner() int8 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt8(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *EmbeddingLookupSparseOptions) MutateCombiner(n int8) bool {
	return rcv._tab.MutateInt8Slot(4, n)
}

func EmbeddingLookupSparseOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func EmbeddingLookupSparseOptionsAddCombiner(builder *flatbuffers.Builder, combiner int8) {
	builder.PrependInt8Slot(0, combiner, 0)
}
func EmbeddingLookupSparseOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
